{"version":3,"sources":["components/ProfilePicture/ProfilePicture.png","components/NavBar/NavBar.js","components/ProfilePicture/ProfilePicture.js","components/About/About.js","components/Contact/Contact.js","components/Projects/Projects.js","components/Skills/Skills.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentPage","page","setState","setPage","_this2","keys","pages","map","pageValue","react_default","a","createElement","className","getPageClass","onClick","handlePageChange","bind","key","renderPageOptions","React","Component","ProfilePicture","src","pic","alt","About","src_components_ProfilePicture_ProfilePicture","Contact","Projects","width","Skills","ABOUT","SKILLS","PROJECTS","CONTACT","App","assertThisInitialized","components_About_About","components_Skills_Skills","components_Projects_Projects","components_Contact_Contact","components_NavBar_NavBar","renderCurrentPage","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.77abe112.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ProfilePicture.1861e83f.png\";","import React from 'react';\r\nimport './NavBar.css';\r\n\r\n\r\n\r\nclass NavBar extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcurrentPage: 'about'\r\n\t\t};\r\n\t}\r\n\r\n\tgetPageClass(page) {\r\n\t\tif (page === this.state.currentPage) {\r\n\t\t\treturn 'active'\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t}\r\n\thandlePageChange(page) {\r\n\t\tthis.setState({\r\n\t\t\tcurrentPage: page\r\n\t\t});\r\n\t\tthis.props.setPage(page);\r\n\t}\r\n\trenderPageOptions() {\r\n\t\treturn Object.keys(this.props.pages).map(page => {\r\n\t\t\tlet pageValue = this.props.pages[page];\r\n\t\t\treturn <li \t\r\n\t\t\t\t\t\tclassName={this.getPageClass(pageValue)}\r\n\t\t\t\t\t\tonClick={this.handlePageChange.bind(this,pageValue)}\t\r\n\t\t\t\t\t\tkey={pageValue}> {page} </li>;\r\n\t\t});\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"NavBar\">\r\n\t\t\t\t<div className=\"NavBar-nav-options\">\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{this.renderPageOptions()}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport pic from './ProfilePicture.png'\r\nimport './ProfilePicture.css';\r\n\r\nclass ProfilePicture extends React.Component {\r\n\r\n\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<img \tclassName=\"profile-pic\" \t\r\n\t\t\t\t\tsrc={pic}\r\n\t\t\t\t\t\r\n\t\t\t\t\talt=\"\">  \r\n\t\t\t</img>\r\n\t\t)\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport default ProfilePicture;","import React from 'react';\r\nimport './About.css';\r\nimport ProfilePicture from '../ProfilePicture/ProfilePicture.js';\r\n\r\nclass About extends React.Component {\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div \tclassName=\"about-div\">  \r\n\t\t\t\t\t<ProfilePicture />\r\n\t\t\t\t\t<p>New Graduate from UC Santa Cruz with a bachelors in Computer Science located in San Francisco. \r\n\t\t\t\t\t\t<br/> Experienced in backend and frontend development, Looking for Software Engineering opportunities in the Bay Area.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default About;","import React from 'react';\r\n\r\n\r\n\r\nclass Contact extends React.Component {\r\n\r\n\r\n\trender() {\r\n\t\treturn <div> <img src=\"https://upload.wikimedia.org/wikipedia/commons/f/f9/Road-under-construction.png\" alt=\"\"></img> </div>\r\n\t}\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\n\r\n\r\n\r\nclass Projects extends React.Component {\r\n\r\n\r\n\trender() {\r\n\t\treturn <div> \r\n\t\t\t\t\t<img \t\r\n\t\t\t\t\t\t\twidth=\"40%\"\r\n\t\t\t\t\t\t\tsrc=\"http://pngimg.com/uploads/under_construction/under_construction_PNG46.png\"\r\n\t\t\t\t\t\t\talt=\"\">\r\n\t\t\t\t\t</img> \r\n\t\t\t\t</div>\r\n\t}\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\nimport './Skills.css';\r\n\r\n\r\n\r\nclass Skills extends React.Component {\r\n\r\n\r\n\trender() {\r\n\t\treturn <div> \r\n\t\t\t\t\t<img className=\"my-image\"\r\n\t\t\t\t\t\t alt=\"some stuff\"\r\n\t\t\t\t\tsrc=\"http://pngimg.com/uploads/under_construction/under_construction_PNG42.png\">\r\n\t\t\t\t\t</img> \r\n\t\t\t\t</div>\r\n\t}\r\n}\r\n\r\nexport default Skills;","import React, { Component } from 'react';\nimport './App.css';\nimport NavBar from './components/NavBar/NavBar';\nimport About from './components/About/About';\nimport Contact from './components/Contact/Contact';\nimport Projects from './components/Projects/Projects';\nimport Skills from './components/Skills/Skills';\n\n\nconst pages = {\n  'ABOUT':'about',\n  'SKILLS':'skills',\n  'PROJECTS':'projects',\n  'CONTACT':'contact'\n};\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      currentPage: 'about'\n    };\n    this.setPage = this.setPage.bind(this);\n\n  }\n  setPage(page) {\n    this.setState({\n      currentPage: page\n    });\n  }\n  renderCurrentPage() {\n    switch(this.state.currentPage) {\n      case 'about':\n        return (<About />);\n      \n      case 'skills':\n        return (<Skills />);\n      \n      case 'projects':\n        return (<Projects />);\n      \n      case 'contact':\n        return (<Contact />);\n      \n      default:\n        return (<About />);\n    \n      }\n  }\n\n  render() {\n    // console.log(this.pages);\n    return (\n      <div className=\"App\">\n        <h1> Pablo Imeri </h1>\n        <NavBar setPage={this.setPage}\n                pages={pages}/>\n        <div className=\"CurrentPage\">\n          {this.renderCurrentPage()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}